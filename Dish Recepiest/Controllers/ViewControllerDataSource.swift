//
//  ViewControllerDataSource.swift
//  Dish Recepiest
//
//  Created by Kirill Kungurov on 18.05.2020.
//  Copyright Â© 2020 Kirill Kungurov. All rights reserved.
//

import UIKit
import PartyPicksVerticalFlowLayout

class ViewControllerDataSource : NSObject, UICollectionViewDataSource {
    
    private var source : [String] = [
        "Amsterdam ðŸ‡³ðŸ‡±", "New York ðŸ‡ºðŸ‡¸", "London ðŸ‡¬ðŸ‡§", "Berlin ðŸ‡©ðŸ‡ª", "Barcelona ðŸ‡ªðŸ‡¸", "Lisbon ðŸ‡µðŸ‡¹", "Rio de Janeiro ðŸ‡§ðŸ‡·", "Sydney ðŸ‡¦ðŸ‡º", "Paris ðŸ‡«ðŸ‡·", "SÃ£o Paulo ðŸ‡§ðŸ‡·",
        "Milan ðŸ‡®ðŸ‡¹", "Toronto ðŸ‡¨ðŸ‡¦", "BogotÃ¡ ðŸ‡¨ðŸ‡´", "Moscow ðŸ‡·ðŸ‡º", "San Francisco ðŸ‡ºðŸ‡¸", "Hague ðŸ‡³ðŸ‡±", "Curitiba ðŸ‡§ðŸ‡·", "Melbourne ðŸ‡¦ðŸ‡º", "Los Angeles ðŸ‡ºðŸ‡¸",
        "New Delhi ðŸ‡®ðŸ‡³", "Vienna ðŸ‡¦ðŸ‡¹", "Lyon ðŸ‡«ðŸ‡·", "Singapore ðŸ‡¸ðŸ‡¬", "ZÃ¼rich ðŸ‡¨ðŸ‡­", "MaceiÃ³ ðŸ‡§ðŸ‡·", "Cairo ðŸ‡ªðŸ‡¬", "Rehovot ðŸ‡®ðŸ‡±", "Chicago ðŸ‡ºðŸ‡¸",
        "Seoul ðŸ‡°ðŸ‡·", "Taipei ðŸ‡¹ðŸ‡¼", "Bruxelles ðŸ‡§ðŸ‡ª", "Shanghai ðŸ‡¨ðŸ‡³", "Marbella ðŸ‡ªðŸ‡¸", "Karachi ðŸ‡µðŸ‡°", "Istanbul ðŸ‡¹ðŸ‡·"
    ]
    
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let object = source[indexPath.row]
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: CollectionCell.cellIdentifier, for: indexPath) as! CollectionCell
        cell.viewModel = CollectionCell.CollectionCellViewModel(title: object)
        return cell
    }
    
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
        return source.count
    }
    
    func numberOfSections(in collectionView: UICollectionView) -> Int {
        return 1
    }
}

// MARK: - Party Picks Flow Layout Delegate
extension ViewControllerDataSource : PartyPicksVerticalFlowLayoutDelegate {
    
    func collectionView(_ collectionView: UICollectionView, widthForCellAt indexPath: IndexPath, withHeight height: CGFloat) -> CGFloat {
        let object = source[indexPath.row]
        return cellWidthFor(text: object)
    }
    
    private func cellWidthFor(text: String) -> CGFloat {
        
        let label = UILabel(frame: CGRect.zero)
        label.font = UIFont.systemFont(ofSize: 16.0)
        label.text = text
        label.sizeToFit()
        
        var rect = label.intrinsicContentSize
        rect.width += 32 // Padding
        let newWidth = rect.width.rounded()
        
        return newWidth
    }
}
